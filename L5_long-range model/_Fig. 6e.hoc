load_file("nrngui.hoc")

xopen("$(NEURONHOME)/lib/hoc/noload.hoc")

load_proc("nrnmainmenu")

xopen("Biophysics2.hoc")
xopen("AP_invivo.ses")

parameters()
geom_nseg()

objref zz
zz = new Impedance()

func rn() { local rn
  //init()  // make sure all changes to g, c, ri etc. have taken effect
  soma(.5) zz.loc(0.5)  // sets origin for impedance calculations to middle of soma
  zz.compute(0)  // DC input R
  soma(.5) { rn = zz.input(0.5) }  // rn is input R at middle of the soma
  return rn
}



//----------------------------------------------------------------------------
//  insert Gfluct process
//----------------------------------------------------------------------------

access apic[9]

objref fl
fl = new Gfluct2(0.5)

fl.std_e = 0.012		// 4 times larger
fl.std_i = 0.0264


proc make_Fpanel() {			// make panel
	xpanel("Fluctuating Conductance model")
	xpvalue("E_e",&fl.E_e)
	xpvalue("E_i",&fl.E_i)
	xpvalue("g_e0",&fl.g_e0)
	xpvalue("g_i0",&fl.g_i0)
	xpvalue("std_e",&fl.std_e)
	xpvalue("std_i",&fl.std_i)
	xpvalue("tau_e",&fl.tau_e)
	xpvalue("tau_i",&fl.tau_i)
	xbutton("Run","run()")
	xpanel()
}

make_Fpanel()



xpanel("Myelin properties")
xbutton("Cortical demyelination","Ctxdemyelin()")
xbutton("Remyelination","myelin()")
xpanel()


//----------------------------------------------------------------------------
//  init procedures
//----------------------------------------------------------------------------


proc init() {local saveDt, i

	finitialize(v_init)
	fcurrent()
	saveDt = dt
	dt = .5
	for i=1,545/dt fadvance()
	dt = saveDt

	init_channels()

	if (cvode.active()) {
		cvode.re_init()
	} else {
		fcurrent()
	}
	frecord_init()
}

init()





